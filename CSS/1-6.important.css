/* 전체를 감싸는 박스=> 작명container */
.container {
  width: 800px;
}
.header {
  width: 100%;
  /* 내 부모 요소 width의 100% */
  height: 50px;
  background-color: aqua;
}
.left-menu {
  width: 20%;
  height: 400px;
  background-color: cornflowerblue;
  float: left;
  /* 이 요소를  붕 띄워서 왼쪽정렬, */
  /* block element에만 적용 가능 ,inline element에 쓰면inline-block으로 바뀜 */
}
.right {
  width: 80%;
  height: 400px;
  background-color: coral;
  float: left;
}
.footer {
  width: 100%;
  height: 100px;
  background-color: grey;
  clear: both;
  float: none;
  /* float 속성 다음에 뭔가를 배치하고싶을떄 */
  /* clear속성은 다음에 오는 요소가 float영향을 받지 않게 해준다. block 요소에만 적용 가능하다 버그가 생기지 않게 float:none도 추가해주는것이 좋다
  예) float:left 는 clear:left로 해결 */
  /* float: none; : block기본 속성 유지(기본값) */
}
/* float 프로퍼티는 해당 요소를 다음 요소 위에 떠 있게 한다. 여기서 떠 있다(float)는 의미는 요소가 기본 레이아웃 흐름에서 벗어나 요소의 모서리가 페이지의 왼쪽이나 오른쪽에 이동하는 것이다. 그래서 보통 레이아웃을 구성할 때 요소를 가로 정렬하기 위해 사용되는 기법이다. 예를 들어, 문서에 사진과 그림이 있을 때, 그림을 왼쪽이나 오른쪽으로 띄워서 정렬 하거나 각 객체를 오른쪽이나 왼쪽으로 정렬하여 전체 문서를 배치(layout)할 때도 사용할 수 있다 */

/* CSS의 clear 속성은 별도의 속성으로서, 주요 기능은 float 속성이 적용된 요소 다음에 위치하는 요소들이 float 속성이 적용된 요소와 겹치는 현상을 방지하기 위해 사용된다. 요소에 float 속성이 적용되면 그 이후에 등장하는 모든 요소들은 정확한 위치를 설정하기가 매우 힘들어 지게 되는데, 따라서 clear 속성을 사용하여, 이후의 요소들이 더는 float 속성에 영향을 받지 않도록 설정해주어 요소들이 float 속성이 적용된 요소 아래에 위치하도록 한다.  */

/* (참고) float 속성으로 가로정렬할 땐
float 박스들을 싸매는 하나의 큰 div 박스를 만들고 폭을 지정해주는게 좋습니다.
그래야 모바일에서 안 흘러넘침 */

/* float 프로퍼티를 사용할 때 요소의 위치를 고정시키는 position 프로퍼티의 absolute를 사용하면 안된다. float 속성이 relative한 위치 지정을 하기 때문에 position: absolute 속성이 적용되지 않기 때문이다.
또한 float 속성을 사용하면 해당 요소는 일반적인 흐름에서 벗어나게 되어 요소의 부모 요소는 해당 요소의 높이를 인식하지 못하게 되는데, 이 경우 부모 요소에 overflow: hidden 속성을 추가하여 해결할 수 있다. */
